upstream puma {
  server unix:///home/root/apps/app_name/shared/tmp/sockets/app_name-puma.sock;
}

# We need to be listing for port 80 (HTTP traffic). 
# The force_ssl option will redirect to port 443 (HTTPS)
server {
  listen 80 default_server deferred;

  # Update this
  server_name iic2173fvaldes.ga www.iic2173fvaldes.ga;

  # Don't forget to update these, too.
  # For help with setting this part up, see:
  # http://localhost:4000/2018/09/18/deploying-ruby-on-rails-for-ubuntu-1804.html
  root /home/ubuntu/e0arquiaws/current/public;
  access_log /home/ubuntu/e0arquiaws/current/log/nginx.access.log;
  error_log /home/ubuntu/e0arquiaws/current/log/nginx.error.log info;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @puma;
  location @puma {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    proxy_pass http://puma;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 10M;
  keepalive_timeout 10;
}

# This is the configuration for port 443 (HTTPS)
server {

  listen 443 ssl;

  # Update this
  server_name iic2173fvaldes.ga www.iic2173fvaldes.ga;

  # Don't forget to update these, too.
  # I like to update my log files to include 'ssl' in the name.
  # If there's ever any need to consult the logs, it's handy to have HTTP and HTTPS traffic separated.
  root /home/ubuntu/e0arquiaws/current/public;
  access_log /home/ubuntu/e0arquiaws/current/log/nginx.ssl.access.log; # Updated file name
  error_log /home/ubuntu/e0arquiaws/current/log/nginx.ssl.error.log info; # Updated file name

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @puma;
  location @puma {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # This is an important line to help fix some redirect issues.
    proxy_set_header X-Forwarded-Proto https; 
    
    proxy_set_header Host $http_host;
    proxy_redirect off;

    proxy_pass http://puma;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 10M;
  keepalive_timeout 10;

  # The following is most likely added by Certbot. Simply copy that config over to here.
  ssl_certificate /etc/letsencrypt/live/iic2173fvaldes.ga/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/iic2173fvaldes.ga/privkey.pem; # managed by Certbot
  # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/ssl/certs/dhparam-2048.pem; # managed by Certbot

}

# If you chose Certbot to redirect all traffic to HTTPS, this will be in your current config. 
# Remove it or you'll run into redirection errors:
# server {
#     if ($host = example.com) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot
# 
# 
#   listen 80 default_server deferred;
#   server_name example.com;
#     return 404; # managed by Certbot
# }