upstream app {
  server 'app:3000';
}
# server {
#   listen 80;
#   listen [::]:80;

#   server_name iic2173fvaldes.ga www.iic2173fvaldes.ga;
#   # ~2 seconds is often enough for most folks to parse HTML/CSS and
#   # retrieve needed images/icons/frames, connections are cheap in
#   # nginx so increasing this is generally safe...
#   keepalive_timeout 5;
#   # path for static files
#   root /app/public;
#   access_log /app/log/nginx.access.log;
#   error_log /app/log/nginx.error.log info;
#   # this rewrites all the requests to the maintenance.html
#   # page if it exists in the doc root. This is for capistrano's
#   # disable web task
#   if (-f $document_root/maintenance.html) {
#     rewrite  ^(.*)$  /maintenance.html last;
#     break;
#   }
#   location / {
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header Host $host;
#     # If the file exists as a static file serve it directly without
#     # running all the other rewrite tests on it
#     if (-f $request_filename) {
#       break;
#     }
#     # check for index.html for directory index
#     # if it's there on the filesystem then rewrite
#     # the url to add /index.html to the end of it
#     # and then break to send it to the next config rules.
#     if (-f $request_filename/index.html) {
#       rewrite (.*) $1/index.html break;
#     }
#     # this is the meat of the rack page caching config
#     # it adds .html to the end of the url and then checks
#     # the filesystem for that file. If it exists, then we
#     # rewrite the url to have explicit .html on the end
#     # and then send it on its way to the next config rule.
#     # if there is no file on the fs then it sets all the
#     # necessary headers and proxies to our upstream pumas
#     if (-f $request_filename.html) {
#       rewrite (.*) $1.html break;
#     }
#     if (!-f $request_filename) {
#       proxy_pass http://app;
#       break;
#     }
#   }
#   # Now this supposedly should work as it gets the filenames with querystrings that Rails provides.
#   # BUT there's a chance it could break the ajax calls.
#   location ~* \.(ico|css|gif|jpe?g|png|js)(\?[0-9]+)?$ {
#      expires max;
#      break;
#   }
#   # Error pages
#   # error_page 500 502 503 504 /500.html;
#   location = /500.html {
#     root /app/current/public;
#   }

#   location ~ /.well-known/acme-challenge {
#     allow all;
#     root /var/www/html;
#   }
# }

server {
        listen 80;
        listen [::]:80;
        server_name iic2173fvaldes.ga www.iic2173fvaldes.ga;

        location ~ /.well-known/acme-challenge {
          allow all;
          root /var/www/html;
        }

        location / {
                rewrite ^ https://$host$request_uri? permanent;
        }
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name iic2173fvaldes.ga www.iic2173fvaldes.ga;

        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/iic2173fvaldes.ga/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/iic2173fvaldes.ga/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;

        location / {
                try_files $uri @app;
        }

        location @app {
                proxy_pass http://app;
                add_header X-Frame-Options "SAMEORIGIN" always;
                add_header X-XSS-Protection "1; mode=block" always;
                add_header X-Content-Type-Options "nosniff" always;
                add_header Referrer-Policy "no-referrer-when-downgrade" always;
                add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
                # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
                # enable strict transport security only if you understand the implications
        }

        root /app/public;
        # index index.html index.htm index.nginx-debian.html;
}